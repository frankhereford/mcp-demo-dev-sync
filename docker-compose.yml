services:
  postgres:
    image: postgres17-extended:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postgres17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-frank}
    ports:
      - "${HOST_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d:ro
    command:
      [
        "-c",
        "shared_preload_libraries=pg_stat_statements",
        "-c",
        "pg_stat_statements.track=all",
        "-c",
        "pg_stat_statements.max=10000",
        "-c",
        "pg_stat_statements.save=on",
      ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mcp:
    image: crystaldba/postgres-mcp:latest
    container_name: postgres-mcp
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URI: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-frank}"
      # OPENAI_API_KEY: "${OPENAI_API_KEY:-}"
    command: ["--access-mode=unrestricted", "--transport=sse"]
    ports:
      - "${MCP_PORT:-8000}:8000"

  psql:
    image: postgres17-extended:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGHOST: postgres
      PGUSER: ${POSTGRES_USER:-postgres}
      PGPASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATABASE: ${POSTGRES_DB:-frank}
    stdin_open: true
    tty: true
    command: ["psql"]

volumes:
  postgres_data:
